global
  debug

  stats socket /run/haproxy/admin.sock mode 660 level admin
  stats timeout 30s

  # Distribute the health checks with a bit of randomness
  spread-checks 5

resolvers docker
  nameserver dns "${DNS_TCP_ADDR}:${DNS_TCP_PORT}"
  resolve_retries       3
  timeout retry         1s
  hold other           10s
  hold refused         10s
  hold nx              10s
  hold timeout         10s
  hold valid           10s

defaults
  log   global
  mode  http
  retries 3
  option redispatch
  option dontlog-normal
  option dontlognull

  option log-health-checks

  option http-server-close
  timeout connect 5s
  timeout client 30s
  timeout client-fin 30s
  timeout server 30s
  timeout tunnel  1h

  default-server resolvers docker resolve-prefer ipv4
  default-server init-addr none

  errorfile 400 /usr/local/etc/haproxy/errors/400.http
  errorfile 403 /usr/local/etc/haproxy/errors/403.http
  errorfile 408 /usr/local/etc/haproxy/errors/408.http
  errorfile 500 /usr/local/etc/haproxy/errors/500.http
  errorfile 502 /usr/local/etc/haproxy/errors/502.http
  errorfile 503 /usr/local/etc/haproxy/errors/503.http
  errorfile 504 /usr/local/etc/haproxy/errors/504.http

frontend frontend
  bind *:9000
  mode http
  option httplog

  http-response set-header Content-Security-Policy default-src\ \'self\';\ style-src\ \'self\'\ http://fonts.googleapis.com;\ font-src\ http://fonts.gstatic.com;\ connect-src\ \'self\'\ ws://localhost:9000/;
 
  acl activityapi path_beg -i /api/activity
  acl not_ready nbsrv(activityservice) lt 1
  use_backend activityservice  if activityapi

  acl usersapi path_beg -i /api/users
  acl not_ready nbsrv(friendservice) lt 1
  use_backend friendservice if usersapi 

  acl chirpsapi path_beg -i /api/chirps
  acl not_ready nbsrv(chirpservice) lt 1
  use_backend chirpservice  if chirpsapi 

  default_backend static-content
 

  monitor-uri   /site_alive
  monitor fail  if not_ready

backend activityservice 
  mode http
  option httplog
  option httpchk GET /health HTTP/1.1\r\nHost:localhost
  balance roundrobin
  server activityservice1 activityservice:9000 check inter 1m

backend friendservice 
  mode http
  option httplog
  option httpchk GET /health HTTP/1.1\r\nHost:localhost
  balance roundrobin
  server friendservice1 friendservice:9000 check inter 1m

backend chirpservice 
  mode http
  option httplog
  option httpchk GET /health HTTP/1.1\r\nHost:localhost
  balance roundrobin
  server chirpservice1 chirpservice:9000 check inter 1m

backend static-content
  mode http
  option httpchk HEAD / HTTP/1.1\r\nHost:localhost
  option httplog
  balance roundrobin
  server webapp1 web:9000 check inter 1m

